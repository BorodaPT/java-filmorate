DROP TABLE IF EXISTS request_status CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genre_film CASCADE;
DROP TABLE IF EXISTS like_film CASCADE;

CREATE TABLE  IF NOT EXISTS request_status (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	login varchar(20) NOT NULL,
	name varchar(50),
	email varchar(70) NOT NULL,
	birthday date NOT NULL,
	UNIQUE (id,login)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id BIGINT  NOT NULL,
	friend_id BIGINT  NOT NULL,
	request_status_id INTEGER NOT NULL,
	CONSTRAINT FK_USER_ID FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
	CONSTRAINT FK_FRIEND_ID FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE,
	CONSTRAINT FK_REQUEST_STATUS_ID FOREIGN KEY (request_status_id) REFERENCES request_status(id),
	UNIQUE (user_id,friend_id)
);

CREATE TABLE IF NOT EXISTS genre (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) NOT NULL,
	description varchar(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) NOT NULL,
	description varchar(200),
	duration INTEGER NOT NULL,
	releaseDate date NOT NULL,
	mpa_id INTEGER NOT NULL,
	CONSTRAINT FK_MPA FOREIGN KEY (mpa_id) REFERENCES mpa(id),
	UNIQUE (id,name)
);

CREATE TABLE IF NOT EXISTS genre_film (
	film_id BIGINT  NOT NULL,
	genre_id INTEGER  NOT NULL,
	CONSTRAINT FK_FILM_ID FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
	CONSTRAINT FK_GENRE_ID FOREIGN KEY (genre_id) REFERENCES genre(id)  ON DELETE CASCADE,
	UNIQUE (film_id,genre_id)
);

CREATE TABLE IF NOT EXISTS like_film (
	film_id BIGINT NOT NULL,
	user_id BIGINT NOT NULL,
	CONSTRAINT FK_FILM_LIKE_ID FOREIGN KEY (film_id) REFERENCES films(id)  ON DELETE CASCADE,
	CONSTRAINT FK_USER_LIKE_ID FOREIGN KEY (user_id) REFERENCES users(id)  ON DELETE CASCADE,
	UNIQUE (film_id,user_id)
);